@using ProjectMayhem.Models

@model ScheduleViewModel

@{
    ViewBag.Title = "Learning schedule";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>@ViewBag.Title.</h2>
<p>Current year: @Model.Year, quarter: @Model.Quarter</p>

<!-- This holds the generated FullCalendar element for the Learning Schedule.-->
<div id="schedule">

</div>

<!-- Modal dialog to show learning day details. -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><span id="topicName"></span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p id="pDetails"></p>
                <p id="pTopics"></p>
                <p id="pReferences"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>

</div>

<!--This is an old way to use FullCalendar-->
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>

    <script>
        $(document).ready(function () {
            var events = [];
            // Getting events for the calendar. Need Javascript objects with specific fields for FullCalendar to work.
            $.ajax({
                type: "GET",
                url: "/Learning/GetLearningDays",
                success: function (data) {
                    $.each(data, function (i, learningDay) {
                        events.push({
                            title: learningDay.Title,
                            description: learningDay.Description, // v.Description, // Not sure, why we would need descriptions here.
                            start: moment(learningDay.Date),
                            references: learningDay.References,
                            topics: learningDay.Topics,
                            end: null,
                            color: 'Cyan', // Could store the color inside learning days.
                            allDay: true // Learning days are events that last a full day.
                        })
                    });

                    GenerateCalendar(events);
                },
                error: function (error) {
                    alert('failed to get learning days');
                }
            })

            // Sets correct properties to the calendar, event handlers and events for display and interaction.
            // Destroys the calendar in case it was created earlier. This avoids some issues.
            function GenerateCalendar(events) {
                $('#schedule').fullCalendar('destroy');
                $('#schedule').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    // What happens when you click on an event -> display modal with event info.
                    eventClick: function (learningEvent, jsEvent, view) {
                        $('#myModal #topicName').text(learningEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start:<b/> ' + learningEvent.start.format("YYYY-MMM-DD")));
                        $description.append($('<p/>').html('<b>Description:</b> ' + learningEvent.description));

                        var $topicsDescription = $('<div/>');
                        $topicsDescription.append($('<p/>').html('<b>Topics:</b><br/>'));
                        var $topics = $('<ol/>');
                        for (var topic of learningEvent.topics) {
                            $topics.append($('<li>' + topic.Name + '</li>'));
                        }
                        $topicsDescription.append($topics);

                        var $referencesDescription = $('<div/>');
                        $referencesDescription.append($('<p/>').html('<b>References:</b>'));
                        var $references = $('<ol/>');
                        for (var reference of learningEvent.references) {
                            $references.append($('<li><a href="' + reference + '">' + reference + '</a></li>'));
                        }
                        $referencesDescription.append($references);

                        $('#myModal #pDetails').empty().html($description);
                        $('#myModal #pTopics').empty().html($topicsDescription);
                        $('#myModal #pReferences').empty().html($referencesDescription);

                        $('#myModal').modal();
                    }
                })
            }
        })
    </script>
}